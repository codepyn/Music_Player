// Generated by view binder compiler. Do not edit!
package com.hslxywyjw.musicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSeekBar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.imageview.ShapeableImageView;
import com.hslxywyjw.musicplayer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPlayerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton backBtnPA;

  @NonNull
  public final ImageButton equalizerBtnPA;

  @NonNull
  public final ImageButton favouritesBtnPA;

  @NonNull
  public final ExtendedFloatingActionButton nextBtnPA;

  @NonNull
  public final ExtendedFloatingActionButton playPauserBtnPA;

  @NonNull
  public final ExtendedFloatingActionButton previousBtnPA;

  @NonNull
  public final ImageButton repeatBtnAP;

  @NonNull
  public final AppCompatSeekBar seekBarPA;

  @NonNull
  public final ImageButton shareBtnPA;

  @NonNull
  public final ShapeableImageView songImgPA;

  @NonNull
  public final TextView songNamePA;

  @NonNull
  public final ImageButton timerBtnPA;

  @NonNull
  public final TextView tvSeekBarEnd;

  @NonNull
  public final TextView tvSeekBarStart;

  private ActivityPlayerBinding(@NonNull LinearLayout rootView, @NonNull ImageButton backBtnPA,
      @NonNull ImageButton equalizerBtnPA, @NonNull ImageButton favouritesBtnPA,
      @NonNull ExtendedFloatingActionButton nextBtnPA,
      @NonNull ExtendedFloatingActionButton playPauserBtnPA,
      @NonNull ExtendedFloatingActionButton previousBtnPA, @NonNull ImageButton repeatBtnAP,
      @NonNull AppCompatSeekBar seekBarPA, @NonNull ImageButton shareBtnPA,
      @NonNull ShapeableImageView songImgPA, @NonNull TextView songNamePA,
      @NonNull ImageButton timerBtnPA, @NonNull TextView tvSeekBarEnd,
      @NonNull TextView tvSeekBarStart) {
    this.rootView = rootView;
    this.backBtnPA = backBtnPA;
    this.equalizerBtnPA = equalizerBtnPA;
    this.favouritesBtnPA = favouritesBtnPA;
    this.nextBtnPA = nextBtnPA;
    this.playPauserBtnPA = playPauserBtnPA;
    this.previousBtnPA = previousBtnPA;
    this.repeatBtnAP = repeatBtnAP;
    this.seekBarPA = seekBarPA;
    this.shareBtnPA = shareBtnPA;
    this.songImgPA = songImgPA;
    this.songNamePA = songNamePA;
    this.timerBtnPA = timerBtnPA;
    this.tvSeekBarEnd = tvSeekBarEnd;
    this.tvSeekBarStart = tvSeekBarStart;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backBtnPA;
      ImageButton backBtnPA = ViewBindings.findChildViewById(rootView, id);
      if (backBtnPA == null) {
        break missingId;
      }

      id = R.id.equalizerBtnPA;
      ImageButton equalizerBtnPA = ViewBindings.findChildViewById(rootView, id);
      if (equalizerBtnPA == null) {
        break missingId;
      }

      id = R.id.favouritesBtnPA;
      ImageButton favouritesBtnPA = ViewBindings.findChildViewById(rootView, id);
      if (favouritesBtnPA == null) {
        break missingId;
      }

      id = R.id.nextBtnPA;
      ExtendedFloatingActionButton nextBtnPA = ViewBindings.findChildViewById(rootView, id);
      if (nextBtnPA == null) {
        break missingId;
      }

      id = R.id.playPauserBtnPA;
      ExtendedFloatingActionButton playPauserBtnPA = ViewBindings.findChildViewById(rootView, id);
      if (playPauserBtnPA == null) {
        break missingId;
      }

      id = R.id.previousBtnPA;
      ExtendedFloatingActionButton previousBtnPA = ViewBindings.findChildViewById(rootView, id);
      if (previousBtnPA == null) {
        break missingId;
      }

      id = R.id.repeatBtnAP;
      ImageButton repeatBtnAP = ViewBindings.findChildViewById(rootView, id);
      if (repeatBtnAP == null) {
        break missingId;
      }

      id = R.id.seekBarPA;
      AppCompatSeekBar seekBarPA = ViewBindings.findChildViewById(rootView, id);
      if (seekBarPA == null) {
        break missingId;
      }

      id = R.id.shareBtnPA;
      ImageButton shareBtnPA = ViewBindings.findChildViewById(rootView, id);
      if (shareBtnPA == null) {
        break missingId;
      }

      id = R.id.songImgPA;
      ShapeableImageView songImgPA = ViewBindings.findChildViewById(rootView, id);
      if (songImgPA == null) {
        break missingId;
      }

      id = R.id.songNamePA;
      TextView songNamePA = ViewBindings.findChildViewById(rootView, id);
      if (songNamePA == null) {
        break missingId;
      }

      id = R.id.timerBtnPA;
      ImageButton timerBtnPA = ViewBindings.findChildViewById(rootView, id);
      if (timerBtnPA == null) {
        break missingId;
      }

      id = R.id.tvSeekBarEnd;
      TextView tvSeekBarEnd = ViewBindings.findChildViewById(rootView, id);
      if (tvSeekBarEnd == null) {
        break missingId;
      }

      id = R.id.tvSeekBarStart;
      TextView tvSeekBarStart = ViewBindings.findChildViewById(rootView, id);
      if (tvSeekBarStart == null) {
        break missingId;
      }

      return new ActivityPlayerBinding((LinearLayout) rootView, backBtnPA, equalizerBtnPA,
          favouritesBtnPA, nextBtnPA, playPauserBtnPA, previousBtnPA, repeatBtnAP, seekBarPA,
          shareBtnPA, songImgPA, songNamePA, timerBtnPA, tvSeekBarEnd, tvSeekBarStart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
